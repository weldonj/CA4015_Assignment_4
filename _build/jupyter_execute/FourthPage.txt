from __future__ import print_function
import time
import numpy as np
import pandas as pd
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
%matplotlib inline
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import seaborn as sns


time_start = time.time()
tsne = TSNE(n_components=2, verbose=1, perplexity=40, n_iter=300)
tsne_results = tsne.fit_transform(user_embeddings)
print('t-SNE done! Time elapsed: {} seconds'.format(time.time()-time_start))

plt.figure(figsize=(16,10))
sns.scatterplot(
    x="tsne-2d-one", y="tsne-2d-two",
    palette=sns.color_palette("hls", 10),
    data=user_embeddings,
    legend="full",
    alpha=0.3
)

time_start = time.time()
tsne = TSNE(n_components=2, verbose=1, perplexity=40, n_iter=300)
tsne_results = tsne.fit_transform(artist_embeddings)
print('t-SNE done! Time elapsed: {} seconds'.format(time.time()-time_start))

artist_embeddings['tsne-2d-one'] = tsne_results[:,0]
artist_embeddings['tsne-2d-two'] = tsne_results[:,1]
plt.figure(figsize=(16,10))
sns.scatterplot(
    x="tsne-2d-one", y="tsne-2d-two",
    palette=sns.color_palette("hls", 10),
    data=artist_embeddings,
    legend="full",
    alpha=0.3
)

artist_embeddings['Artist ID'] = str
for i in range(0,len(artist_embeddings)):
  artist_embeddings['Artist ID'][i] = str(i+1)

rslt_df = artist_embeddings.loc[artist_embeddings['tsne-2d-one'] > -2 ] 

rslt_df = rslt_df.loc[rslt_df['tsne-2d-one'] < 0] 

rslt_df = rslt_df.loc[rslt_df['tsne-2d-two'] < 1.8 ] 

rslt_df = rslt_df.loc[rslt_df['tsne-2d-two'] > -2 ] 

plt.figure(figsize=(16,10))
sns.scatterplot(
    x="tsne-2d-one", y="tsne-2d-two",
    palette=sns.color_palette("hls", 10),
    data=rslt_df,
    legend="full",
    alpha=0.3
)

rslt_df = rslt_df.loc[rslt_df['tsne-2d-two'] < 0.6 ] 

rslt_df = rslt_df.loc[rslt_df['tsne-2d-two'] > -1.5 ] 

plt.figure(figsize=(16,10))
sns.scatterplot(
    x="tsne-2d-one", y="tsne-2d-two",
    palette=sns.color_palette("hls", 10),
    data=rslt_df,
    legend="full",
    alpha=0.3
)

artist_id_set = set(rslt_df["Artist ID"])

for i in range(0, len(artists)):
  if str(artists.id.iloc[i]) in artist_id_set:
    print(artists.name.iloc[i])
